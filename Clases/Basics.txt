npm init -y

npm i nodemon
npm i express express-handlebars socket.io mongoose
npm i express express-handlebars mongoose

// app.js

import express from "express";
import rutaX from "./routes/rutaX.router.js";

const app = express();

app.use(express.json());
app.use(express.urlencoded({ extended: true }));

app.get("/", (req,res)=>{})
app.use("/", rutaX);

const PORT = 8080;

app.listen(PORT, () => {
	console.log(`Escuchando al puerto ${PORT}`);
});

// En el objeto REQUEST va a viajar la informacion del cliente
// En el objeto RESPONSE va a viajar la información desde el servidor al cliente

// __dirname => utils.js

import { dirname } from 'path';
import { fileURLToPath } from 'url';

export const __dirname = dirname(fileURLToPath(import.meta.url));

// en app.js
app.use(express.static(__dirname+"/public")) // archivos públicos/estáticos

// archivos estáticos se guardan en carpeta public

app.engine("handlebars",handlebars.engine()) // solo para HANDLEBARS o un motor propio


// DBCONFIG

import mongoose from 'mongoose';

const URI =
	'mongodb+srv://elSonoSapiens:2xyjhtHqPvGEOdZG@cluster0.eu8lqfi.mongodb.net/ecommerce?retryWrites=true&w=majority';

mongoose
	.connect(URI)
	.then(() => console.log('Conectado a la db'))
	.catch((error) => console.log(error));

//




